import{c as S,a as A,b as O,d as l,u as w,e as E,t as f,f as F,i as y,F as P,r as k}from"./vendor.719495c1.js";const I=function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const e of t)if(e.type==="childList")for(const u of e.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&o(u)}).observe(document,{childList:!0,subtree:!0});function a(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerpolicy&&(e.referrerPolicy=t.referrerpolicy),t.crossorigin==="use-credentials"?e.credentials="include":t.crossorigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function o(t){if(t.ep)return;t.ep=!0;const e=a(t);fetch(t.href,e)}};I();const g={states:{WY:{counties:{Somecounty:{cities:{Somecity:{population:10}}}}}}},j={addState:()=>{console.info("not implemented, state")},addCity:()=>{},addCounty:()=>{},increment:()=>{}},$=E([g,j]),q=d=>{const[c,a]=S(!1),o=()=>a(!0),[t,e]=A(d.initial??g);O(()=>{c()&&(console.info(t),a(!1))});const u=r=>e("states",s=>({...s,[r]:{counties:{}}})),C=(r,s)=>e("states",r,"counties",n=>({...n,[s]:{cities:{}}})),b=(r,s,n)=>e("states",r,"counties",s,"cities",i=>({...i,[n]:{population:0}})),v=(r,s,n)=>e("states",r,"counties",s,"cities",n,"population",i=>i+1),L=(r,s)=>n=>{const i=r(n);return console.info(`${s}: ${n}`),o(),i},N=(r,s)=>(n,i)=>{const p=r(n,i);return console.info(`${s}: ${n}`),o(),p},m=(r,s)=>(n,i,p)=>{const x=r(n,i,p);return console.info(`${s}: ${n}`),o(),x},_={addState:L(u,"Add State"),addCounty:N(C,"Add county"),addCity:m(b,"Add city"),increment:m(v,"Add resident")};return l($.Provider,{value:[t,_],get children(){return d.children}})},h=()=>w($),B=f('<input type="text">'),K=f('<button type="button">Add State</button>'),M=f("<ul></ul>"),T=f("<li></li>"),W=()=>{const[,d]=h(),[c,a]=S("");return[(()=>{const o=B.cloneNode(!0);return o.addEventListener("change",t=>a(t.currentTarget.value)),o})(),(()=>{const o=K.cloneNode(!0);return o.$$click=()=>d.addState(c()),o})()]},Y=()=>{const[d]=h();return(()=>{const c=M.cloneNode(!0);return y(c,l(P,{get each(){return Object.keys(d.states)},children:(a,o)=>(()=>{const t=T.cloneNode(!0);return y(t,a),t})()})),c})()},z=()=>l(q,{get children(){return[l(Y,{}),l(W,{})]}});F(["click"]);k(()=>l(z,{}),document.getElementById("root"));
